# -*- Makefile -*- 
# Generic makefile for IMSL, MKL, blas/lapack, and FORTRAN libraries
# Generic makefile Tao's and Daniel's C routines 
# Generic makefile for various machines

# LIBRARIES SUPPORTED
#USE_TZ = USE_TZ
USE_DW = USE_DW
  USE_DW_MATRIX_CPP = USE_DW_MATRIX_CPP
  #USE_DW_MATRIX = USE_DW_MATRIX
  #USE_DW_ERROR = USE_DW_ERROR
  #USE_DW_ARRAY = USE_DW_ARRAY
  #USE_DW_ASCII = USE_DW_ASCII
  USE_DW_STAT = USE_DW_STAT
  #USE_DW_SORT = USE_DW_SORT
  #USE_DW_ELLIPTICAL = USE_DW_ELLIPTICAL
  #USE_DW_HISTO = USE_DW_HISTO
  #USE_DW_MATH = USE_DW_MATH
  #USE_DW_SWITCH = USE_DW_SWITCH
  #USE_DW_STATE_SPACE = USE_DW_STATE_SPACE
USE_MKL = USE_MKL
#USE_NPSOL = USE_NPSOL 
#USE_FORTRAN = USE_FORTRAN
#USE_ATLAS = USE_ATLAS
#USE_IMSL = USE_IMSL
#USE_LAPACK = USE_LAPACK
#USE_FORTRAN = USE_FORTRAN
#USE_PTHREAD = USE_PTHREAD
USE_MATH = USE_MATH
USE_GSL = USE_GSL
#USE_GSL_CBLAS = USE_GSL_CBLAS
#USE_BOOST = USE_BOOST
#USE_MYSQL_CPP_CONN = USE_MYSQL_CPP_CONN
#USE_LOG4CXX = USE_LOG4CXX
USE_MPI = USE_MPI

BASE_DIR = $(HOME)/git

CC = gcc #mpicc #gcc
CFLAGS = -g -Wall

MAKEFILE_DIR = $(BASE_DIR)/projects_dw

include $(MAKEFILE_DIR)/make_machines_master
include $(MAKEFILE_DIR)/make_libraries_master

LIBS := $(LIBS) -lstdc++ -lpthread 

# PROJECT PATHS #################################################################
EQUAL_ENERGY_DIR = $(BASE_DIR)/equal_energy_generic_interface
EQUAL_ENERGY_CPP_DIR = $(EQUAL_ENERGY_DIR)/EquiEnergyCPP
EQUAL_ENERGY_INCLUDE_DIR = $(EQUAL_ENERGY_DIR)/EquiEnergyCPP


# BUILD DIRECTORIES #############################################################
BUILD_DIR = $(BASE_DIR)/projects_dw/work/sbvar/build
EXE_DIR = $(BASE_DIR)/projects_dw/work/sbvar

INCLUDE_DIR := $(INCLUDE_DIR) -I$(EQUAL_ENERGY_INCLUDE_DIR) 

VPATH := $(VPATH) $(EQUAL_ENERGY_CPP_DIR) $(BUILD_DIR) 


# OBJECTS #######################################################################
OBJS2 := binary2text.o CSampleIDWeight.o $(OBJS) 


#################################################################################
all : $(EXE_DIR)/binary2text
	

$(EXE_DIR)/binary2text: $(OBJS2)
	$(CC) $(CFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(EXE_DIR)/binary2text

%.o : %.c
	$(CC) $(CFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@
%.o : %.cpp
	$(CC) $(CFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@

#################################################################################
clean:
	rm -f $(EXE_DIR)/*.o
	rm -f $(BUILD_DIR)/*.o

#################################################################################
display:
	echo "EXE_DIR: $(EXE_DIR)"
	echo "BUILD_DIR: $(BUILD_DIR)"
	echo "VPATH: $(VPATH)"
	echo "INCLUDE_DIR: $(INCLUDE_DIR)"
	echo "LIBS_DIR: $(LIBS_DIR)"
	echo "LIBS: $(LIBS)"
	echo "OBJS2: $(OBJS2)"
	echo "OBJS: $(OBJS)"
	echo "MATRIX_OBJS: $(MATRIX_OBJS)"
	echo $(CFLAGS)
