//**********************************************************************************************************************//
// WARNINGS: Do NOT change any comment line bracketed by //== and ==/ or insert any character BEFORE the openning
//             comment symbol //== on the same line of //== ???? ==//.  Any such change may cause the program to
//             crash or, worse, to give erroneous results.
//           Change the numbers ONLY below the comment line indicated by //== ???? ==//.  Space and tab are allowed
//             but NOT any other characters before or between numbers.
//           Add, if you wish, comments (words) right ABOVE the line of //== ???? ==// or on the same line of
//             //== ????? ==// but only AFTER the closing comment symbol ==// or AFTER all the numbers below //== ???? ==//.
//---
// WARNING: It is the user's responsibility to make sure that the dimension matches exactly the vector or matrix.
//             Any mismatch may cause the program to crash or, worse, to give erroneous results.
//**********************************************************************************************************************//

//== indxEstFinder ==//   //1: finds the posterior or ML estimate; 0: no such finding and imports values of the parameters from a file.
0

//============= Types of hard restrictions on free parameters: ====================
//=== mod: 6 variables, no decpreciation shock, gtheta derived, and by fixed.
//---   mod0: default model (persistence for all exogenous shocks)
//---   mod1: restricting glambdastar and geta but everything else is the same as model 0.
//---   mod2: restricting gbeta but everything else is the same as model 0.
//---   mod3: restricting galpha and geta with beta derived, but everything else is the same as model 0.  used (No Use anymore because of normalization problem).
//---   mod4: restricting galpha, glambdastar, and geta but everything else is the same as model 0.
//---   mod5: restricting galpha and geta with beta derived -- the same as model 3 but with R to be freely estimated.
//---   mod6: restricting galpha and geta, -- the same as model 3 but with R to be freely estimated.
//=== modb: 6 variables, depreciation shock, gtheta fixed, and by derived.
//---   modb103: adding depreciation shock and deleting the debt series (5 variables total),
//                  but everything else is the same as model mod3 (which has the debt series).  OK.
//---   modb105: adding depreciation shock and deleting the debt series (5 variables total),
//                  but everything else is the same as model mod5 (which has the debt series).  OK.
//=== modc: 6 variables, no depreciation shock, gtheta fixed, and by derived.
//---   modc203: no depreciation shock and exactly the same as mod3.  USED. 
//---                   Potential normalization problem related trend growth (i.e., y_t^{data} = y_t * Gamma_t.
//---                   If the trend growth rate, say lambda*, increases, Gamma_t will be scaled up by, say mu_t.  We can then scale y_t by 1/mu_t.
//---                   That will leave y_t^{data} the same.   This will happen even we assume y_t is stationary because, even if y_t/mu_t is not stationary,
//---                   there is no way to check the stationarity unless we impose this condition.  Note that normalization problem applies to all cases except 
//---                   modc207.
//---   modc205: no depreciation shock and exactly the same as mod5 -- R is freely estimated.  used (No Use anymore because of normalization problem).
//---   modc207: same as modc203 but fix glambdaq and glambdastar.  (This gets rid of normalization problems.)  Used for the ./CoreLogic85onVersion version.
//---   modc208: same as modc203 but fix glambdastar.  Never used yet for the final paper. Not even coded up yet.
//---            The following statement may NOT be true: the normalization problems appears to related to glambdastar, not glambdaq because the data on Q can pin down the stationary part of Q 
//---              as long as we have enough sample to get the stationary part.  The latent neutral tech changes cannot be pinned by the data, however. 
//== indx_hard_restrict ==//
203


//== nDrawsInitsp ==//   //Number of initial starting points draws randomly from the prior to find the posterior peak (with the option /c 2).
10000

//== randomseed ==//   //0: random seed according to the clock time for csminwel and draws from some priors (e.g.,Draw_xphi_dvFromPrior_specific() in dsgelinv1_TAG.c); other number: fixed seed.
0

//== nDrawsFromPrior ==//  //One-time draws from the prior to determine the scale, dsgemodel_ps->scale4logpriordensity, when drawn prior parameters violates restrictions (such as unique equilibrium).
10000

//== flag_ComputingHessian ==//   //Since Hessian takes long to compute, we want to compute only once and reset to 0.
0

//== flag_ComputingHist ==//     //1: Computing historical decompositions (and forecasts); 0: No computing when doing estimation.
1

//== Use_IMSL_opt ==//   //1: use the IMSL optimization package; 0: not use the package so all the IMSL specifications in the following will be IGNORED by the program.
0

//== Use_NPSOL_opt ==//   //1: use the NPSOL optimization package; 0: not use the package so all the IMSL specifications in the following will be IGNORED by the program.
1


//=================================================================================================//
// Pre-fixed variables
//=================================================================================================//
//== Iql ==//
1.0     %This indicator for land price channel is always set to one because it's used only for counterfactual exercises.

//== Iqk ==//
1.0     %This indicator for capital price channel is always set to one because it's used only for counterfactual exercises.

//== gthetaK ==//
1.0     %This may be estimated, but it may have an identification problem.


//=================================================================================================//
// Pre-fixed steady-state vlues
//=================================================================================================//
//== R ==//   // quarterly risk-free rate.  NOT read when mod*5 is used.
1.01

//== by ==//  // quarterly debt-output ratio  2.52  5.38.  Used only for mod, NOT used for modb and modc.
5.38

//== ky ==//        // quarterly capital-output ratio  5.40
4.6194

//== ik ==//   // quarterly investment-capital ratio 0.0370
0.0523

//== qlLeOY ==//   // quarterly commercial land to output ratio
2.60

//== qlLhOY ==//   // quarterly residential land (housing) to output ratio  4.5664.  Used for benchmark model at least 203 and 207, but never used for alternative model.
5.8011

//== nbar ==//     //labour hours
0.25

//---------------
//== glambdaq ==//    //5.5% annualized rate. Used when indx_hard_restrict = 207.
1.01375

//== glambdastar ==//    //1.5% annualized rate. Used when indx_hard_restrict = 1, 4., 207, 208
1.00375

//== gbeta ==//    //Used when indx_hard_restrict = 2.
0.98

//== geta ==//     //Used when indx_hard_restrict = 1, 3, 4, 5,
0.0

//== galpha ==//    //Used when indx_hard_restrict = 3, 4, 5,
0.3

//---------------
//== gtheta ==//    //0.55;  Used for modb or modc where indx_hard_restrict=103, 105, 203, 205.
0.75


//=================================================================================================//
// For one-block or constant-parameter csminwel problem.
//=================================================================================================//
//== crit ==//    //Overall convergence criterion for the function value.
1.0e-9

//== itmax ==//     //Maximum number of iterations.
500

//== ini_h_csminwel ==//   //Scale for the inverse Hessian updaing matrix.  The default value 5.0e-4;
1.0e-4

//== gradstps_csminwel ==//  //Step size of numerical gradient for the constant-parameter model only. The default value is 1.0e-04 (for monthly TBVAR)
1.0e-06


//=================================================================================================//
// For block-wise csminwel problems.
//=================================================================================================//
//== criterion_start ==//  //Default 1.0e-4
1.0

//== criterion_end ==//   //Default 1.0e-9
1.0e-5

//== criterion_increment ==//  //0.1
0.1

//== max_iterations_start ==//
50

//== max_iterations_increment ==//
2.0

//== ini_h_scale ==//
1.0e-4

//== max_block_iterations ==//
100

//For the time-varying-parameter model only.
// 1st element: gradient step for the model parameters (tends to be large; the default value is 1.0e-02).
// 2nd element: gradient step for the transition probability matrix (tends to be smaller; the default value is 1.0e-03)
// 3rd element: gradient step for all the parameters (tends to be smaller; the default value is 1.0e-03 or 1.0e-04).
//== gradstps_csminwel_dv ==//
3

1.0e-06  1.0e-03  1.0e-07

//=================================================================================================//
// For mixture models.
//=================================================================================================//
//--- Gradient steps for block minimization procedures.
//---  1st element: gradient step for the first model (DSGE) parameters (tends to be smallest; e.g., 1.0e-02).
//---  2nd element: gradient step for the second model (BVAR) parameters (tends to be second smallest; e.g., 1.0e-04).
//---  3rd element: gradient step for the transition probability matrix (tends to be large; e.g., 1.0e-03).
//---  4th element: gradient step for all the parameters (tends to be smallest; e.g., 1.0e-03 or 1.0e-04).
//== gradstps_csminwel_dv ==//
4

1.0e-05 1.0e-04  1.0e-03  1.0e-05

//--- Scales for initial Hessians for block minimization procedures.
//---  1st element: scale of initial Hessian for the first model (DSGE) parameters.
//---  2nd element: scale of initial Hessian for the second model (BVAR) parameters.
//---  3rd element: scale of initial Hessian for the transition probability matrix.
//---  4th element: scale of initial Hessian for all the parameters.
//== scales_inithessian_dv ==//  
4

5.0e-04 5.0e-04  5.0e-04  5.0e-04


//=================================================================================================//
// IMSL: the tag "imsl" means nonsimple constraints (including equality and inequality constraints),
//       the tage "simple" means simple-bound constraints.
//
// Example:
//  One non-simple constraint: alpha_1 + alpha_2 <= 1.0.
//    //== imsl_ncons ==//
//    1
//
//    //== imsl_lh_locs_iv ==//  //1.0*alpha_1 (2nd element) + 1.0*alpha_2 (3rd element) <= 1.0 at the locations 1 and 2 (base-0).
//    2
//
//    1  2
//
//    //== imsl_lh_vals_dv ==//
//    2
//
//    1.0  1.0
//
//    //== imsl_rh_vals_dv ==//
//    1
//
//    1.0
//
//
// Explanations:
//    hard# -- hard restrictions of type #. It turns out that our parameters are ordered in such a way
//               that constrained parameters are ordered first, so different restriction types do not
//               affect the nonsimple linear constraints. In short, there is no need to attach the prefix
//               hard#_ to imsl_* for nonsimple linear constraints.
//   imsl_neqs -- number of equality constraints, excluding simple bound constraints.
//                  IMSL dictates that equality constraints come always BEFORE inequality constrains.
//   imsl_ncons -- a total number of constrains, including equality and inequality constraints,
//                   but excluding simple bound constraints.
//   imsl_lh_locs_iv -- base-0 locations out of the npars*ncons vector for the nonzero coefficients
//                        in left-hand sides of the linear constraints.
//                        Irrelevant If imsl_neqs=0 and  imsl_ncons = 0.
//   imsl_lh_vals_dv -- values of the nonzero coefficients corresponding to the locations specified by
//                        imsl_lh_locs_dv in left-hand sides of the linear constraints.
//                         Irrelevant If imsl_neqs=0 and  imsl_ncons = 0.
//   imsl_rh_vals_dv -- values in right-hand sides of the linear constraints.
//                        The number of these values matches imsl_ncons.
//                        Irrelevant If imsl_neqs=0 and  imsl_ncons = 0.
// To specify the following simple bounds, consult ViolateAPrioriRestrictions() in *_comfuns.c.
//   hard#_simple_locs_iv -- base-0 locations out of the npars vector for simple-bound constraints.
//   hard#_simple_lowvals_dv -- low values of simple constraints,
//                                corresponding to the locations specified by hard#_simple_locs_iv.
//   hard#_simple_highvals_dv -- high values  of simple constraints,
//                                 corresponding to the locations specified by hard#_simple_locs_iv.
//
// The following equalities must holds:
//   1) imsl_ncons = imsl_rh_vals_dv->n.
//   2) imsl_lh_locs_iv->n = imsl_lh_vals_dv->n.
//   3) hard#_simple_locs_iv->n = hard#_simple_lowvals_dv->n = hard#_simple_highvals_dv->n.
//=================================================================================================//

//---------------------------- For models 0-2 -----------------//
//== imsl_neqs ==//
0

//== imsl_ncons ==//
0

//== imsl_lh_locs_iv ==//  //1.0*alpha_1 (2nd element) + 1.0*alpha_2 (3rd element) <= 1.0 at the locations 1 and 2 (base-0).
2

1  2

//== imsl_lh_vals_dv ==//
2

1.0  1.0

//== imsl_rh_vals_dv ==//
1

1.0


//---------------------------- Model 0: default model (persistence for all exogenous shocks) -----------------//
//== hard0_simple_locs_iv ==//
2

3        4

//== hard0_simple_lowvals_dv ==//
2

0.0      0.0

//== hard0_simple_highvals_dv ==//
2

0.99999  0.99999

//=== SAVE the following example. No need to specifiy these because *_est.c or the main
//===   C file will automatically take care of the interval [1.0E-10  1.0E+30].
//===   Search for package_imslconlin_ps->lowbounds_dv->v[ki] in the main file.
// //== hard0_simple_locs_iv ==//
// 23
//
// 0        1        2        3        4        5        6        7        8        9        10       11       12       13       14       15       16       17       18       19       20       21       22
//
// //== hard0_simple_lowvals_dv ==//
// 23
//
// 1.0E-10  1.0E-10  1.0E-10  0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      1.0E-10  1.0E-10  1.0E-10  1.0E-10  1.0E-10  1.0E-10  1.0E-10  1.0E-10
//
// //== hard0_simple_highvals_dv ==//
// 23
//
// 1.0E+30  1.0E+30  1.0E+30  0.99999  0.99999  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30  1.0E+30


//---------------------------- Model 1: pre-fixed glambdastar and geta -----------------//
//== hard1_simple_locs_iv ==//
2

2        3

//== hard1_simple_lowvals_dv ==//
2

0.0      0.0

//== hard1_simple_highvals_dv ==//
2

0.99999  0.99999


//---------------------------- Model 2: pre-fixed gbeta -----------------//
//== hard2_simple_locs_iv ==//
2

2        3

//== hard2_simple_lowvals_dv ==//
2

0.0      0.0

//== hard2_simple_highvals_dv ==//
2

0.99999  0.99999


//---------------------------- Model 3: pre-fixed galpha, geta. -----------------//
//== hard3_simple_locs_iv ==//
2

2        3

//== hard3_simple_lowvals_dv ==//
2

0.0      0.0

//== hard3_simple_highvals_dv ==//
2

0.99999  0.99999


//---------------------------- Modelb 103: pre-fixed galpha, geta. -----------------//
//== hard103_simple_locs_iv ==//
2

2        3

//== hard103_simple_lowvals_dv ==//
2

0.0      0.0

//== hard103_simple_highvals_dv ==//
2

0.99999  0.99999

//---------------------------- Modelb 203: pre-fixed galpha, geta. -----------------//
//== hard203_simple_locs_iv ==//
2

2        3

//== hard203_simple_lowvals_dv ==//
2

0.0      0.0

//== hard203_simple_highvals_dv ==//
2

0.99999  0.99999

//---------------------------- Model 4: pre-fixed galpha, glambdastar, geta. -----------------//
//== hard4_simple_locs_iv ==//
2

1        2

//== hard4_simple_lowvals_dv ==//
2

0.0      0.0

//== hard4_simple_highvals_dv ==//
2

0.99999  0.99999


//---------------------------- Model 5: pre-fixed galpha, geta. -----------------//
//== hard5_simple_locs_iv ==//
2

2        3

//== hard5_simple_lowvals_dv ==//
2

0.0      0.0

//== hard5_simple_highvals_dv ==//
2

0.99999  0.99999

//---------------------------- Model 105: pre-fixed galpha, geta. -----------------//
//== hard105_simple_locs_iv ==//
2

2        3

//== hard105_simple_lowvals_dv ==//
2

0.0      0.0

//== hard105_simple_highvals_dv ==//
2

0.99999  0.99999

//---------------------------- Model 205: pre-fixed galpha, geta. -----------------//
//== hard205_simple_locs_iv ==//
2

2        3

//== hard205_simple_lowvals_dv ==//
2

0.0      0.0

//== hard205_simple_highvals_dv ==//
2

0.99999  0.99999




//===================== Model 207 ============================
   //--- Deep parameters.
   // 1.  ggammah         % habit persistence for household
   // 2.  ggammae         % habit persistence for entrepreneur
   // 3.  gOmega          % investment adjustment cost parameter (as estimated by LWZ (2009))
   //--- Exogenous processes
   // 4   grhoglambdaa = 0.9;    %Household patience persistence
   // 5   grhoglambdaz = 0.1;    %Neutral tech trend growth persistence
   // 6.  grhognuz = 0.9;        %Neutral tech level persistence
   // 7.  grhoglambdaq = 0.1;    %Biased tech trend growth persistence
   // 8.  grhognuq = 0.9;        %Biased tech level persistence
   // 9.  grhogvarphi = 0.9;     %Household housing intratemporal (MRS) persistence
   // 10. grhogpsi = 0.9;        %Household labor intratemporal (MRS) persistence
   // 11. grhogtheta = 0.9;         %(Borrowing) collateral persistence
   //---
   // 12. gsigmaglambdaa = 0.1;  %Household patience shock
   // 13. gsigmaglambdaz = 0.1;  %Neutral tech trend growth shock
   // 14. gsigmagnuz = 0.1;      %Neutral tech level shock
   // 15. gsigmaglambdaq = 0.1;  %Biased tech trend growth shock
   // 16. gsigmagnuq = 0.1;      %Biased tech level shock
   // 17. gsigmagvarphi = 0.1;   %Household housing intratemporal (MRS) shock
   // 18. gsigmagpsi = 0.1;      %Household labor intratemporal (MRS) shock
   // 19. gsigmagtheta = 0.1;       %(Borrowing) collateral shock


//===================== Model 203 ============================
   //--- Deep parameters.
   // 1.  100*(glambdaq-1)        % glambdaq = 1.01; trend quarterly growth rate of ISTC (as estimated by LWZ (2009))
   // 2.  100*(glambdastar-1)     % glambdastar = 1.005; trend quarterly growth rate of real per capita GDP
   // 3.  ggammah         % habit persistence for household
   // 4.  ggammae         % habit persistence for entrepreneur
   // 5.  gOmega          % investment adjustment cost parameter (as estimated by LWZ (2009))
   //--- Exogenous processes
   // 6.  grhoglambdaa = 0.9;    %Household patience persistence
   // 7.  grhoglambdaz = 0.1;    %Neutral tech trend growth persistence
   // 8.  grhognuz = 0.9;        %Neutral tech level persistence
   // 9.  grhoglambdaq = 0.1;    %Biased tech trend growth persistence
   // 10. grhognuq = 0.9;        %Biased tech level persistence
   // 11. grhogvarphi = 0.9;     %Household housing intratemporal (MRS) persistence
   // 12. grhogpsi = 0.9;        %Household labor intratemporal (MRS) persistence
   // 13. grhogtheta = 0.9;         %(Borrowing) collateral persistence
   //---
   // 14. gsigmaglambdaa = 0.1;  %Household patience shock
   // 15. gsigmaglambdaz = 0.1;  %Neutral tech trend growth shock
   // 16. gsigmagnuz = 0.1;      %Neutral tech level shock
   // 17. gsigmaglambdaq = 0.1;  %Biased tech trend growth shock
   // 18. gsigmagnuq = 0.1;      %Biased tech level shock
   // 19. gsigmagvarphi = 0.1;   %Household housing intratemporal (MRS) shock
   // 20. gsigmagpsi = 0.1;      %Household labor intratemporal (MRS) shock
   // 21. gsigmagtheta = 0.1;       %(Borrowing) collateral shock

//===================== Old model ============================
   //--- Deep parameters.
   // 1.  100*(1/gbeta-1)         % gbeta = 0.98; subjective discount factor
   // 2.  100*(glambdaq-1)        % glambdaq = 1.01; trend quarterly growth rate of ISTC (as estimated by LWZ (2009))
   // 3.  100*(glambdastar-1)     % glambdastar = 1.005; trend quarterly growth rate of real per capita GDP
   // 4.  ggammah         % habit persistence for household
   // 5.  ggammae         % habit persistence for entrepreneur
   // 6.  geta            % inverse Frisch elasticity of labor supply
   // 7.  gOmega          % investment adjustment cost parameter (as estimated by LWZ (2009))
   //--- Exogenous processes
   // 8.  grhoglambdaa = 0.9;    %Household patience persistence
   // 9.  grhoglambdaz = 0.1;    %Neutral tech trend growth persistence
   // 10. grhognuz = 0.9;        %Neutral tech level persistence
   // 11. grhoglambdaq = 0.1;    %Biased tech trend growth persistence
   // 12. grhognuq = 0.9;        %Biased tech level persistence
   // 13. grhogvarphi = 0.9;     %Household housing intratemporal (MRS) persistence
   // 14. grhogpsi = 0.9;        %Household labor intratemporal (MRS) persistence
   // 15. grhogtheta = 0.9;         %(Borrowing) collateral persistence
   //---
   // 16. gsigmaglambdaa = 0.1;  %Household patience shock
   // 17. gsigmaglambdaz = 0.1;  %Neutral tech trend growth shock
   // 18. gsigmagnuz = 0.1;      %Neutral tech level shock
   // 19. gsigmaglambdaq = 0.1;  %Biased tech trend growth shock
   // 20. gsigmagnuq = 0.1;      %Biased tech level shock
   // 21. gsigmagvarphi = 0.1;   %Household housing intratemporal (MRS) shock
   // 22. gsigmagpsi = 0.1;      %Household labor intratemporal (MRS) shock
   // 23. gsigmagtheta = 0.1;       %(Borrowing) collateral shock

